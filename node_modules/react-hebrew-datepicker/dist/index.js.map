{"version":3,"file":"index.js","sources":["../CalendarPopup.js","../HebrewDatePicker.js"],"sourcesContent":["// CalendarPopup.jsx\r\nimport React, { useEffect, useRef } from \"react\";\r\nimport { IoArrowUp, IoArrowDown } from \"react-icons/io5\";\r\nimport { FaCaretDown } from \"react-icons/fa\";\r\nimport { HDate } from \"@hebcal/core\";\r\nimport './HebrewDatePicker.css';\r\n\r\nconst hebrewMonths = [\r\n    \"ניסן\", \"אייר\", \"סיוון\", \"תמוז\", \"אב\", \"אלול\",\r\n    \"תשרי\", \"חשוון\", \"כסלו\", \"טבת\", \"שבט\", \"אדר א׳\", \"אדר ב׳\"\r\n];\r\n\r\nconst daysOfWeek = [\"א\", \"ב\", \"ג\", \"ד\", \"ה\", \"ו\", \"ש\"];\r\n\r\nconst hebrewNumber = (num) => {\r\n    const hebrewDigits = [\"\", \"א\", \"ב\", \"ג\", \"ד\", \"ה\", \"ו\", \"ז\", \"ח\", \"ט\", \"י\"];\r\n    const tens = [\"\", \"י\", \"כ\", \"ל\"];\r\n    if (num === 15) return \"טו\";\r\n    if (num === 16) return \"טז\";\r\n    if (num <= 10) return hebrewDigits[num];\r\n    if (num < 20) return \"י\" + hebrewDigits[num - 10];\r\n    if (num <= 30) {\r\n        const ten = Math.floor(num / 10);\r\n        const unit = num % 10;\r\n        return tens[ten] + hebrewDigits[unit];\r\n    }\r\n    return num;\r\n};\r\n\r\nconst addHebrewMonths = (hdate, offset) => {\r\n    let month = hdate.getMonth();\r\n    let year = hdate.getFullYear();\r\n    for (let i = 0; i < Math.abs(offset); i++) {\r\n        if (offset > 0) {\r\n            month++;\r\n            if (month === 7) year++;\r\n            if (month > 13 || (!hdate.isLeapYear() && month > 12)) month = 1;\r\n        } else {\r\n            month--;\r\n            if (month < 1) month = hdate.isLeapYear() ? 13 : 12;\r\n            if (month === 6) year--;\r\n        }\r\n    }\r\n    return new HDate(1, month, year);\r\n};\r\n\r\nconst CalendarPopup = ({\r\n    popupRef,\r\n    calendarPos,\r\n    currentHDate,\r\n    selectedHDate,\r\n    onChange,\r\n    setShowCalendar,\r\n    setCurrentHDate,\r\n    showMonthYearPicker,\r\n    setShowMonthYearPicker,\r\n    transitionDirection,\r\n    setTransitionDirection,\r\n    name\r\n}) => {\r\n    const yearScrollRef = useRef(null);\r\n\r\n    // Auto-scroll to current year when year picker opens\r\n    useEffect(() => {\r\n        if (showMonthYearPicker && yearScrollRef.current) {\r\n            const currentYearElement = yearScrollRef.current.querySelector(`[data-year=\"${currentHDate.getFullYear()}\"]`);\r\n            if (currentYearElement) {\r\n                setTimeout(() => {\r\n                    currentYearElement.scrollIntoView({ block: 'center', behavior: 'smooth' });\r\n                }, 50);\r\n            }\r\n        }\r\n    }, [showMonthYearPicker, currentHDate]);\r\n\r\n    const firstOfMonth = new HDate(1, currentHDate.getMonth(), currentHDate.getFullYear());\r\n    const firstWeekday = firstOfMonth.getDay();\r\n    const daysInMonth = currentHDate.daysInMonth();\r\n\r\n    const daysArray = Array(firstWeekday).fill(null).concat(\r\n        Array.from({ length: daysInMonth }, (_, i) => i + 1)\r\n    );\r\n\r\n    const handleSelect = (day) => {\r\n        if (!day) return;\r\n        const hdate = new HDate(day + 1, currentHDate.getMonth(), currentHDate.getFullYear());\r\n        const gregDate = hdate.greg();\r\n        const iso = gregDate.toISOString().slice(0, 10);\r\n        onChange?.({ target: { name, value: iso } });\r\n        setShowCalendar(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div style={{ position: \"fixed\", inset: 0, zIndex: 3000 }} onClick={() => setShowCalendar(false)} />\r\n            <div\r\n                ref={popupRef}\r\n                style={{\r\n                    position: \"absolute\",\r\n                    top: calendarPos.top,\r\n                    left: calendarPos.left,\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 12,\r\n                    boxShadow: \"0 4px 15px rgba(0,0,0,0.3)\",\r\n                    padding: 16,\r\n                    width: 320,\r\n                    fontFamily: \"Arial, sans-serif\",\r\n                    zIndex: 10000,\r\n                }}\r\n            >\r\n                <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\", marginBottom: 10, borderBottom: \"1px solid #eee\" }}>\r\n                    <h3\r\n                        style={{ margin: 0, fontSize: 16, color: \"#4da6ff\", cursor: \"pointer\" }}\r\n                        onClick={() => setShowMonthYearPicker((prev) => !prev)}\r\n                    >\r\n                        {hebrewMonths[currentHDate.getMonth() - 1]} {new HDate(1, currentHDate.getMonth(), currentHDate.getFullYear()).renderGematriya().split(\" \").pop()}\r\n                        <FaCaretDown />\r\n                    </h3>\r\n                    <div style={{ display: \"flex\", gap: 6 }}>\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"arrowBtn icon-tooltip\"\r\n                            onClick={() => {\r\n                                setTransitionDirection(\"forward\");\r\n                                setCurrentHDate(addHebrewMonths(currentHDate, 1));\r\n                            }}\r\n                            style={{\r\n                                background: \"transparent\",\r\n                                border: \"none\",\r\n                                fontSize: 18,\r\n                                cursor: \"pointer\",\r\n                                color: \"#4da6ff\",\r\n                                // position: \"relative\",\r\n                                // display: \"inline-block\",\r\n                                padding: \"8px\"\r\n                            }}\r\n                        >\r\n                            <IoArrowDown />\r\n                            <span className=\"tooltip-text next\">\r\n                                חודש הבא\r\n                            </span>\r\n                        </button>\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"arrowBtn icon-tooltip\"\r\n                            onClick={() => {\r\n                                setTransitionDirection(\"backward\");\r\n                                setCurrentHDate(addHebrewMonths(currentHDate, -1));\r\n                            }}\r\n                            style={{\r\n                                background: \"transparent\",\r\n                                border: \"none\",\r\n                                fontSize: 18,\r\n                                cursor: \"pointer\",\r\n                                color: \"#4da6ff\",\r\n                                // position: \"relative\",\r\n                                // display: \"inline-block\",\r\n                                padding: \"8px\"\r\n                            }}\r\n                        >\r\n                            <IoArrowUp />\r\n                            <span className=\"tooltip-text prev\">\r\n                                חודש קודם\r\n                            </span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n\r\n                {showMonthYearPicker && (\r\n                    <div style={{ display: \"flex\", justifyContent: \"space-between\", marginBottom: 10 }}>\r\n                        <div style={{ maxHeight: 150, overflowY: \"auto\", direction: \"rtl\" }}>\r\n                            {hebrewMonths.map((monthName, i) => (\r\n                                <div\r\n                                    key={i + 1}\r\n                                    onClick={() => {\r\n                                        setCurrentHDate(new HDate(1, i + 1, currentHDate.getFullYear()));\r\n                                        setShowMonthYearPicker(false);\r\n                                    }}\r\n                                    style={{\r\n                                        padding: 6,\r\n                                        cursor: \"pointer\",\r\n                                        color: currentHDate.getMonth() === i + 1 ? \"white\" : \"#333\",\r\n                                        backgroundColor: currentHDate.getMonth() === i + 1 ? \"#4da6ff\" : \"transparent\",\r\n                                        borderRadius: 6\r\n                                    }}\r\n                                >\r\n                                    {monthName}\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                        <div\r\n                            ref={yearScrollRef}\r\n                            style={{ maxHeight: 150, overflowY: \"auto\", direction: \"rtl\" }}\r\n                        >\r\n                            {Array.from({ length: 60 }, (_, i) => { // 60 years total\r\n                                const currentYear = currentHDate.getFullYear();\r\n                                const year = currentYear - 30 + i; // 30 years before to 30 years after\r\n                                const label = new HDate(1, 1, year).renderGematriya().split(\" \").pop();\r\n                                return (\r\n                                    <div\r\n                                        key={year}\r\n                                        data-year={year}\r\n                                        onClick={() => {\r\n                                            setCurrentHDate(new HDate(1, currentHDate.getMonth(), year));\r\n                                            setShowMonthYearPicker(false);\r\n                                        }}\r\n                                        style={{\r\n                                            padding: 6,\r\n                                            cursor: \"pointer\",\r\n                                            color: currentHDate.getFullYear() === year ? \"white\" : \"#333\",\r\n                                            backgroundColor: currentHDate.getFullYear() === year ? \"#4da6ff\" : \"transparent\",\r\n                                            borderRadius: 6\r\n                                        }}\r\n                                    >\r\n                                        {label}\r\n                                    </div>\r\n                                );\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                <div key={currentHDate.toString()} className={`calendar-days ${transitionDirection === \"forward\" ? \"slide-right\" : \"slide-left\"}`}\r\n                    style={{ display: \"grid\", gridTemplateColumns: \"repeat(7, 1fr)\", gap: 6, textAlign: \"center\" }}>\r\n\r\n                    {daysOfWeek.map((d) => (\r\n                        <div key={d} style={{ fontWeight: \"bold\", color: \"#4da6ff\" }}>{d}</div>\r\n                    ))}\r\n                    {daysArray.map((day, i) => {\r\n                        if (!day) return <div key={i} />;\r\n                        const isSelected =\r\n                            selectedHDate.getDate() === day &&\r\n                            selectedHDate.getMonth() === currentHDate.getMonth() &&\r\n                            selectedHDate.getFullYear() === currentHDate.getFullYear();\r\n                        return (\r\n                            <button\r\n                                key={i}\r\n                                type=\"button\"\r\n                                onClick={() => handleSelect(day)}\r\n                                className={`date-picker-day${isSelected ? \" selected\" : \"\"}`}\r\n                                style={{\r\n                                    minWidth: 36,\r\n                                    minHeight: 36,\r\n                                    color: isSelected ? '#fff' : '#444',\r\n                                    borderRadius: 8,\r\n                                    fontSize: 14,\r\n                                    cursor: 'pointer',\r\n                                    padding: 8,\r\n                                    transition: 'border .2s,background .2s,color .2s',\r\n                                    boxSizing: 'border-box',\r\n                                    margin: 0\r\n                                }}\r\n                            >\r\n                                {hebrewNumber(day)}\r\n                            </button>\r\n                        );\r\n                    })}\r\n                </div>\r\n\r\n                <div style={{ display: \"flex\", justifyContent: \"space-between\", marginTop: 12 }}>\r\n                    <button\r\n                        type=\"button\"\r\n                        onClick={() => {\r\n                            const today = new HDate();\r\n                            setCurrentHDate(today);\r\n                            const gregDate = today.greg();\r\n                            const iso = gregDate.toISOString().slice(0, 10);\r\n                            onChange?.({ target: { name, value: iso } });\r\n                            setShowCalendar(false);\r\n                        }}\r\n\r\n                        style={{\r\n                            fontSize: 14,\r\n                            color: \"#4da6ff\",\r\n                            background: \"none\",\r\n                            border: \"none\",\r\n                            cursor: \"pointer\",\r\n                            textDecoration: \"underline\",\r\n                        }}\r\n                    >\r\n                        היום\r\n                    </button>\r\n\r\n                    <button\r\n                        type=\"button\"\r\n                        onClick={() => {\r\n                            onChange?.({ target: { name, value: \"\" } });\r\n                            setShowCalendar(false);\r\n                        }}\r\n                        style={{\r\n                            fontSize: 14,\r\n                            color: \"#4da6ff\",\r\n                            background: \"none\",\r\n                            border: \"none\",\r\n                            cursor: \"pointer\",\r\n                            textDecoration: \"underline\",\r\n                        }}\r\n                    >\r\n                        נקה\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CalendarPopup;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport { IoCalendarOutline } from \"react-icons/io5\";\r\nimport { HDate } from \"@hebcal/core\";\r\nimport './HebrewDatePicker.css';\r\nimport CalendarPopup from \"./CalendarPopup\";\r\n\r\nconst HebrewDatePicker = ({ name, value, defaultValue, onChange, required, label = \"בחר תאריך\", usePortal = false, dir = \"rtl\" }) => {\r\n  // Support both controlled and uncontrolled modes\r\n  const isControlled = value !== undefined;\r\n  const [internalValue, setInternalValue] = useState(defaultValue || '');\r\n  const currentValue = isControlled ? value : internalValue;\r\n\r\n  const showDate = currentValue ? new Date(currentValue) : new Date();\r\n  const selectedHDate = new HDate(showDate);\r\n  const [showCalendar, setShowCalendar] = useState(false);\r\n  const [currentHDate, setCurrentHDate] = useState(selectedHDate);\r\n  const [showMonthYearPicker, setShowMonthYearPicker] = useState(false);\r\n  const [calendarPos, setCalendarPos] = useState({ top: 0, left: 0 });\r\n\r\n  const popupRef = useRef(null);\r\n  const inputRef = useRef();\r\n\r\n  const [transitionDirection, setTransitionDirection] = useState(\"forward\");\r\n\r\n  // Update selectedHDate when value changes (for controlled mode)\r\n  useEffect(() => {\r\n    if (isControlled && value) {\r\n      const newDate = new Date(value);\r\n      const newHDate = new HDate(newDate);\r\n      setCurrentHDate(newHDate);\r\n    } else if (!isControlled && internalValue) {\r\n      const newDate = new Date(internalValue);\r\n      const newHDate = new HDate(newDate);\r\n      setCurrentHDate(newHDate);\r\n    }\r\n  }, [value, internalValue, isControlled]);\r\n\r\n  // Internal change handler\r\n  const handleDateChange = (event) => {\r\n    const newValue = event.target.value;\r\n\r\n    // Update internal state if uncontrolled\r\n    if (!isControlled) {\r\n      setInternalValue(newValue);\r\n    }\r\n\r\n    // Call external onChange if provided\r\n    if (onChange) {\r\n      onChange(event);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleClickOutside = (event) => {\r\n      if (popupRef.current && !popupRef.current.contains(event.target)) {\r\n        setShowCalendar(false);\r\n        setShowMonthYearPicker(false);\r\n      }\r\n    };\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (showCalendar && inputRef.current) {\r\n      const rect = inputRef.current.getBoundingClientRect();\r\n      const calendarWidth = 320; // Width defined in CalendarPopup\r\n      const leftPosition = rect.left + window.scrollX + (rect.width - calendarWidth) / 2;\r\n\r\n      setCalendarPos({\r\n        top: rect.bottom + window.scrollY + 8,\r\n        left: Math.max(10, leftPosition), // Ensure it doesn't go off-screen\r\n      });\r\n    }\r\n  }, [showCalendar]);\r\n\r\n  return (\r\n    <div style={{ position: \"relative\", maxWidth: 360, margin: \"auto\", fontFamily: \"Arial, sans-serif\" }} dir={dir}>\r\n      <label htmlFor={name} style={{ display: \"block\", marginBottom: 6 }}>{label}{required && \" *\"}</label>\r\n      <div style={{ display: \"flex\", alignItems: \"center\", gap: 8 }}>\r\n        <input\r\n          ref={inputRef}\r\n          type=\"text\"\r\n          id={name}\r\n          name={name}\r\n          readOnly\r\n          required={required}\r\n          value={currentValue ? formatHebrewDate(selectedHDate) : \"\"}\r\n          placeholder=\"בחר תאריך עברי\"\r\n          style={{ padding: 10, borderRadius: 5, border: \"1px solid #ccc\", width: \"100%\", backgroundColor: \"white\", color: \"#444\", fontWeight: \"bold\", cursor: \"default\" }}\r\n          onClick={() => setShowCalendar((v) => !v)}\r\n        />\r\n        <button\r\n          onClick={() => setShowCalendar((v) => !v)}\r\n          type=\"button\"\r\n          style={{ cursor: \"pointer\", padding: 8, color: \"#4da6ff\", border: \"none\", borderRadius: 6, background: \"none\", fontSize: 22 }}\r\n        ><IoCalendarOutline /></button>\r\n      </div>\r\n\r\n      {showCalendar && (\r\n        usePortal\r\n          ? createPortal(\r\n            <CalendarPopup\r\n              popupRef={popupRef}\r\n              calendarPos={calendarPos}\r\n              currentHDate={currentHDate}\r\n              selectedHDate={selectedHDate}\r\n              onChange={handleDateChange}\r\n              setShowCalendar={setShowCalendar}\r\n              setCurrentHDate={setCurrentHDate}\r\n              setShowMonthYearPicker={setShowMonthYearPicker}\r\n              showMonthYearPicker={showMonthYearPicker}\r\n              transitionDirection={transitionDirection}\r\n              setTransitionDirection={setTransitionDirection}\r\n              name={name}\r\n            />,\r\n            document.body\r\n          )\r\n          :\r\n          <CalendarPopup\r\n            popupRef={popupRef}\r\n            calendarPos={{ top: \"calc(100% + 8px)\", left: 0 }}\r\n            currentHDate={currentHDate}\r\n            selectedHDate={selectedHDate}\r\n            onChange={handleDateChange}\r\n            setShowCalendar={setShowCalendar}\r\n            setCurrentHDate={setCurrentHDate}\r\n            setShowMonthYearPicker={setShowMonthYearPicker}\r\n            showMonthYearPicker={showMonthYearPicker}\r\n            transitionDirection={transitionDirection}\r\n            setTransitionDirection={setTransitionDirection}\r\n            name={name}\r\n          />\r\n\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst hebrewMonths = [\r\n  \"ניסן\", \"אייר\", \"סיוון\", \"תמוז\", \"אב\", \"אלול\",\r\n  \"תשרי\", \"חשוון\", \"כסלו\", \"טבת\", \"שבט\", \"אדר א׳\", \"אדר ב׳\"\r\n];\r\n\r\nconst hebrewNumber = (num) => {\r\n  const hebrewDigits = [\"\", \"א\", \"ב\", \"ג\", \"ד\", \"ה\", \"ו\", \"ז\", \"ח\", \"ט\", \"י\"];\r\n  const tens = [\"\", \"י\", \"כ\", \"ל\"];\r\n  if (num === 15) return \"טו\";\r\n  if (num === 16) return \"טז\";\r\n  if (num <= 10) return hebrewDigits[num];\r\n  if (num < 20) return \"י\" + hebrewDigits[num - 10];\r\n  if (num <= 30) {\r\n    const ten = Math.floor(num / 10);\r\n    const unit = num % 10;\r\n    return tens[ten] + hebrewDigits[unit];\r\n  }\r\n  return num;\r\n};\r\n\r\nconst formatHebrewDate = (hdate) => {\r\n  try {\r\n    const day = hdate.getDate();\r\n    let monthIndex = hdate.getMonth() - 1;\r\n    if (monthIndex === 11 && !hdate.isLeapYear()) monthIndex = 11;\r\n    else if (monthIndex === 12 && !hdate.isLeapYear()) monthIndex = 11;\r\n    const month = hebrewMonths[monthIndex] || \"\";\r\n    const year = hdate.renderGematriya().split(\" \").pop();\r\n    return `${hebrewNumber(day)} ${month} ${year}`;\r\n  } catch (e) {\r\n    console.error('Error formatting Hebrew date:', e);\r\n    return 'שגיאה בתאריך';\r\n  }\r\n};\r\n\r\nexport default HebrewDatePicker;\r\n"],"names":["hebrewMonths","daysOfWeek","addHebrewMonths","hdate","offset","month","getMonth","year","getFullYear","i","Math","abs","isLeapYear","HDate","CalendarPopup","_ref","popupRef","calendarPos","currentHDate","selectedHDate","onChange","setShowCalendar","setCurrentHDate","showMonthYearPicker","setShowMonthYearPicker","transitionDirection","setTransitionDirection","name","yearScrollRef","useRef","useEffect","current","currentYearElement","querySelector","concat","setTimeout","scrollIntoView","block","behavior","firstWeekday","getDay","daysInMonth","daysArray","Array","fill","from","length","_","React","createElement","Fragment","style","position","inset","zIndex","onClick","ref","top","left","backgroundColor","borderRadius","boxShadow","padding","width","fontFamily","display","justifyContent","alignItems","marginBottom","borderBottom","margin","fontSize","color","cursor","prev","renderGematriya","split","pop","FaCaretDown","gap","type","className","background","border","IoArrowDown","IoArrowUp","maxHeight","overflowY","direction","map","monthName","key","label","toString","gridTemplateColumns","textAlign","d","fontWeight","day","num","hebrewDigits","isSelected","getDate","iso","greg","toISOString","slice","target","value","handleSelect","minWidth","minHeight","transition","boxSizing","floor","marginTop","today","textDecoration","formatHebrewDate","monthIndex","e","console","error","defaultValue","required","_ref$label","_ref$usePortal","usePortal","_ref$dir","dir","isControlled","undefined","_useState2","_slicedToArray","useState","internalValue","setInternalValue","currentValue","showDate","Date","_useState4","showCalendar","_useState6","_useState8","_useState0","setCalendarPos","inputRef","_useState10","newDate","newHDate","handleDateChange","event","newValue","handleClickOutside","contains","document","addEventListener","removeEventListener","rect","getBoundingClientRect","leftPosition","window","scrollX","bottom","scrollY","max","maxWidth","htmlFor","id","readOnly","placeholder","v","IoCalendarOutline","createPortal","body"],"mappings":"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"}